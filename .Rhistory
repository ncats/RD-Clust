print(p.val)
wa1_probit_fever_sero <- glm(Fever_binary ~ PRNT50_binary,family=binomial(link="probit"),
data=filter(nbacc_dose_response_data,variant=='WA-1'))
wa1_probit_fever_sero_dose <- glm(Fever_binary ~ PRNT50_binary + logdose,family=binomial(link="probit"),
data=filter(nbacc_dose_response_data,variant=='WA-1'))
#Wald stat is fine here
summary(wa1_probit_fever_sero_dose)
gamma_probit_biv <- vglm( cbind(PRNT50_binary,Fever_binary) ~  logdose,
family=binom2.or(lmu="probitlink",zero = "or",exchangeable=F),
data=filter(nbacc_dose_response_data,variant=='Gamma'),
control=vglm.control(stepsize = 0.5,maxit = 1000))
gamma_probit_biv_null <- vglm( cbind(PRNT50_binary,Fever_binary) ~  logdose,
family=binom2.or(lmu="probitlink",zero = "or",exchangeable=T),
data=filter(nbacc_dose_response_data,variant=='Gamma'),
control=vglm.control(stepsize = 0.5,maxit = 1000))
#We use Rao's score stats here due to Hauck-Donner effect (DOI: 10.1080/01621459.2021.1886936)
summary(gamma_probit_biv,lrt0=T)
teststat <- -2 * (as.numeric(logLik(gamma_probit_biv_null))-as.numeric(logLik(gamma_probit_biv)))
p.val <- pchisq(teststat, df = length(coef(gamma_probit_biv)) -length(coef(gamma_probit_biv_null)), lower.tail = FALSE)
p.val
gamma_probit_fever_sero <- glm(Fever_binary ~ PRNT50_binary,family=binomial(link="probit"),
data=filter(nbacc_dose_response_data,variant=='Gamma'))
gamma_probit_fever_sero_dose <- glm(Fever_binary ~ PRNT50_binary + logdose,family=binomial(link="probit"),
data=filter(nbacc_dose_response_data,variant=='Gamma'))
#Wald stat is fine here
summary(gamma_probit_fever_sero_dose)
teststat <- -2 * (as.numeric(logLik(gamma_probit_fever_sero))-as.numeric(logLik(gamma_probit_fever_sero_dose)))
p.val <- pchisq(teststat, df = 1, lower.tail = FALSE)
p.val
joint_probit_biv <- vglm( cbind(PRNT50_binary,Fever_binary) ~ variant + logdose,
family=binom2.or(lmu="probitlink",zero = "or",exchangeable=F),
data=nbacc_dose_response_data,
control=vglm.control(stepsize = 0.5,maxit = 1000))
joint_probit_biv_interact <- vglm( cbind(PRNT50_binary,Fever_binary) ~ variant * logdose,
family=binom2.or(lmu="probitlink",zero = "or",exchangeable=F),
data=nbacc_dose_response_data,
control=vglm.control(stepsize = 0.5,maxit = 1000))
joint_probit_biv_null <- vglm( cbind(PRNT50_binary,Fever_binary) ~  logdose,
family=binom2.or(lmu="probitlink",zero = "or",exchangeable=F),
data=nbacc_dose_response_data,
control=vglm.control(stepsize = 0.5,maxit = 1000))
#We use LRT stats here due to Hauck-Donner effect (DOI: 10.1080/01621459.2021.1886936)
summary(joint_probit_biv,lrt0=T)
#We use LRT stats here due to Hauck-Donner effect (DOI: 10.1080/01621459.2021.1886936)
summary(joint_probit_biv,lrt0=T)
summary(joint_probit_biv_interact,lrt0=T)
joint_probit_sero <- glm(PRNT50_binary ~ variant + logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
joint_probit_sero_interact <- glm(PRNT50_binary ~ variant * logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
joint_probit_sero_null <- glm(PRNT50_binary ~ logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
joint_probit_fever <- glm(Fever_binary ~ variant + logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
joint_probit_fever_interact <- glm(Fever_binary ~ variant * logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
joint_probit_fever_null <- glm(Fever_binary ~ logdose,family=binomial(link="probit"),
data=nbacc_dose_response_data)
nbacc_dose_response_data$PRNT50_binary_pred <- NA
# Predict function by default yield prediction on the probit scale not response scale
nbacc_dose_response_data$PRNT50_binary_pred[!is.na(nbacc_dose_response_data$Fever_binary)] <- predict(joint_probit_biv)[,1]
shedding_model <- glm(Nasal_binary ~ variant + logdose, family = binomial(link = "probit"), data = nbacc_dose_response_data)
shedding_model_null <- glm(Nasal_binary ~  logdose, family = binomial(link = "probit"), data = nbacc_dose_response_data)
summary(shedding_model)
shedding_model_rescale <- glm(Nasal_binary ~ variant + PRNT50_binary_pred, family = binomial(link = "probit"), data = nbacc_dose_response_data)
shedding_model_rescale_null <- glm(Nasal_binary ~ PRNT50_binary_pred, family = binomial(link = "probit"), data = nbacc_dose_response_data)
#Viz
dose_range <- 10^seq(-2,4,.1)
pi11_gamma_f <-  function(gamma_or,p1,p2){
a = 1 + (p1 + p2)*(gamma_or - 1)
b = -4*gamma_or*(gamma_or -1)*p1*p2
p11 = (0.5/(gamma_or - 1 ))*(a - sqrt(a^2 + b))
return(p11)
}
pred_df <- bind_rows(
data.frame(Dose=dose_range,
logDose_deposited = log10(dose_range),
variant="WA-1",
Gamma = exp(biv_mle_pars[3]),
PRNT50_binary = pnorm(biv_mle_pars[1] + biv_mle_pars[4] + log10(dose_range)*biv_mle_pars[6]),
Fever_binary = pnorm(biv_mle_pars[2] + biv_mle_pars[5] + log10(dose_range)*biv_mle_pars[7])),
data.frame(Dose=dose_range,
logDose_deposited = log10(dose_range),
variant="Gamma",
Gamma = exp(biv_mle_pars[3]),
PRNT50_binary = pnorm(biv_mle_pars[1] + log10(dose_range)*biv_mle_pars[6]),
Fever_binary = pnorm(biv_mle_pars[2] + log10(dose_range)*biv_mle_pars[7]))
) %>%
mutate(PRNT50_binary_and_Fever =  pi11_gamma_f(Gamma,PRNT50_binary,Fever_binary)) %>%
mutate(PRNT50_binary_only = PRNT50_binary - PRNT50_binary_and_Fever,
Fever_only = Fever_binary - PRNT50_binary_and_Fever) %>%
mutate(Neither = 1 - PRNT50_binary_only - Fever_only - PRNT50_binary_and_Fever)
biv_mle_pars <- coef(joint_probit_biv)
biv_mle_vcov <- vcov(joint_probit_biv)
wa1_sero_logD50_mle <- -(biv_mle_pars[1] + biv_mle_pars[4])/(biv_mle_pars[6])
gamma_sero_logD50_mle <- -(biv_mle_pars[1])/biv_mle_pars[6]
wa1_fever_logD50_mle <- -(biv_mle_pars[2] + biv_mle_pars[5])/(biv_mle_pars[7])
gamma_fever_logD50_mle <- -(biv_mle_pars[2])/biv_mle_pars[7]
### WA-1 Sero vs Fever
wa1_sero_logd50_se <- sqrt(deltavar((-(b0+b1)/b2),
meanval = c(b0 = as.numeric(biv_mle_pars[1]),
b1 = as.numeric(biv_mle_pars[4]),
b2 = as.numeric(biv_mle_pars[6])),
Sigma = as.matrix(biv_mle_vcov[c(1,4,6),c(1,4,6)])
)
)
wa1_fever_logd50_se <- sqrt(deltavar((-(b0+b1)/b2),
meanval = c(b0 = as.numeric(biv_mle_pars[2]),
b1 = as.numeric(biv_mle_pars[5]),
b2 = as.numeric(biv_mle_pars[7])),
Sigma = as.matrix(biv_mle_vcov[c(2,5,7),c(2,5,7)])
)
)
wa1_diff_se <- sqrt(deltavar( (-(b0+b2)/b4) - (-(b1+b3)/b5),
meanval = c(b0 = as.numeric(biv_mle_pars[1]),
b1 = as.numeric(biv_mle_pars[2]),
b2 = as.numeric(biv_mle_pars[4]),
b3 = as.numeric(biv_mle_pars[5]),
b4 = as.numeric(biv_mle_pars[6]),
b5 = as.numeric(biv_mle_pars[7])
),
Sigma = as.matrix(biv_mle_vcov[c(1,2,4,5,6,7),c(1,2,4,5,6,7)])
)
)
wa1_obs_diff_stat <- ((wa1_sero_logD50_mle - wa1_fever_logD50_mle))/wa1_diff_se
### Gamma Sero vs Fever
gamma_sero_logd50_se <- sqrt(deltavar((-b0/b1),
meanval = c(b0 = as.numeric(biv_mle_pars[1]),
b1 = as.numeric(biv_mle_pars[6])),
Sigma = as.matrix(biv_mle_vcov[c(1,6),c(1,6)])
)
)
gamma_fever_logd50_se <- sqrt(deltavar((-b0/b1),
meanval = c(b0 = as.numeric(biv_mle_pars[2]),
b1 = as.numeric(biv_mle_pars[7])),
Sigma = as.matrix(biv_mle_vcov[c(2,7),c(2,7)])
)
)
gamma_diff_se <- sqrt(deltavar( (-b0/b2) - (-b1/b3),
meanval = c(b0 = as.numeric(biv_mle_pars[1]),
b1 = as.numeric(biv_mle_pars[2]),
b2 = as.numeric(biv_mle_pars[6]),
b3 = as.numeric(biv_mle_pars[7])
),
Sigma = as.matrix(biv_mle_vcov[c(1,2,6,7),c(1,2,6,7)])
)
)
gamma_obs_diff_stat <- ((gamma_sero_logD50_mle - gamma_fever_logD50_mle))/gamma_diff_se
### Sero WA-1 vs Gamma
sero_diff_se <- sqrt(deltavar( (-(b0+b1)/b2) - (-b0/b2), ## Could likely be simplified algebraically
meanval = c(b0 = as.numeric(biv_mle_pars[1]),
b1 = as.numeric(biv_mle_pars[4]),
b2 = as.numeric(biv_mle_pars[6])
),
Sigma = as.matrix(biv_mle_vcov[c(1,4,6),c(1,4,6)])
)
)
fever_diff_se <- sqrt(deltavar( (-(b0+b1)/b2) - (-b0/b2), ## Could likely be simplified algebraically
meanval = c(b0 = as.numeric(biv_mle_pars[2]),
b1 = as.numeric(biv_mle_pars[5]),
b2 = as.numeric(biv_mle_pars[7])
),
Sigma = as.matrix(biv_mle_vcov[c(2,5,7),c(2,5,7)])
)
)
sero_obs_diff_stat <- ((wa1_sero_logD50_mle - gamma_sero_logD50_mle))/sero_diff_se
fever_obs_diff_stat <- ((wa1_fever_logD50_mle - gamma_fever_logD50_mle))/fever_diff_se
pred_df <- bind_rows(
data.frame(Dose=dose_range,
logDose_deposited = log10(dose_range),
variant="WA-1",
Gamma = exp(biv_mle_pars[3]),
PRNT50_binary = pnorm(biv_mle_pars[1] + biv_mle_pars[4] + log10(dose_range)*biv_mle_pars[6]),
Fever_binary = pnorm(biv_mle_pars[2] + biv_mle_pars[5] + log10(dose_range)*biv_mle_pars[7])),
data.frame(Dose=dose_range,
logDose_deposited = log10(dose_range),
variant="Gamma",
Gamma = exp(biv_mle_pars[3]),
PRNT50_binary = pnorm(biv_mle_pars[1] + log10(dose_range)*biv_mle_pars[6]),
Fever_binary = pnorm(biv_mle_pars[2] + log10(dose_range)*biv_mle_pars[7]))
) %>%
mutate(PRNT50_binary_and_Fever =  pi11_gamma_f(Gamma,PRNT50_binary,Fever_binary)) %>%
mutate(PRNT50_binary_only = PRNT50_binary - PRNT50_binary_and_Fever,
Fever_only = Fever_binary - PRNT50_binary_and_Fever) %>%
mutate(Neither = 1 - PRNT50_binary_only - Fever_only - PRNT50_binary_and_Fever)
nbacc_dose_response_data$PRNT50_binary_and_Fever <- ifelse(nbacc_dose_response_data$PRNT50_binary == 1 &
nbacc_dose_response_data$Fever_binary == 1,1,0)
nbacc_dose_response_data$PRNT50_binary_only <- ifelse(nbacc_dose_response_data$PRNT50_binary == 1 &
nbacc_dose_response_data$Fever_binary == 0,1,0)
nbacc_dose_response_data$Fever_only <- ifelse(nbacc_dose_response_data$PRNT50_binary == 0 &
nbacc_dose_response_data$Fever_binary == 1,1,0)
nbacc_dose_response_data$Neither <- ifelse(nbacc_dose_response_data$PRNT50_binary == 0 &
nbacc_dose_response_data$Fever_binary == 0,1,0)
nbacc_dose_response_data_long <- nbacc_dose_response_data %>% dplyr::select(ID,variant,logdose,PRNT50_binary,Fever_binary,PRNT50_binary_only,PRNT50_binary_and_Fever) %>% gather("Response","Value",PRNT50_binary:PRNT50_binary_and_Fever ) %>%
mutate(Type=ifelse(Response %in% c("PRNT50_binary","Fever_binary"),"Marginal","Joint"),
Dose = 10^logdose)
#cyno_covid_data_long$Response <- sapply(cyno_covid_data_long$Response,function(x)gsub("_"," ",x))
nbacc_dose_response_data_long$Response <- factor(nbacc_dose_response_data_long$Response,
levels=c("PRNT50_binary","Fever_binary","PRNT50_binary_only","Fever_binary_only","PRNT50_binary_and_Fever"))
pred_long <- pred_df %>% dplyr::select(-Neither,-Fever_only) %>% gather("Response","Value",PRNT50_binary:PRNT50_binary_only) %>%
mutate(Type=ifelse(Response %in% c("PRNT50_binary","Fever_binary"),"Marginal","Joint"))
#pred_long$Response <- sapply(pred_long$Response,function(x)gsub("_"," ",x))
pred_long$Response <- factor(pred_long$Response,
levels=c("PRNT50_binary","Fever_binary","PRNT50_binary_only","Fever_binary_only","PRNT50_binary_and_Fever"))
point_estimates_reduced <- filter(point_estimates,Metric=="D50")
nbacc_dose_response_data$Dose <- 10^nbacc_dose_response_data$logdose
pred_df$logdose <- pred_df$logDose_deposited
pred_df$PRNT50_binary_pred  <- predictvglm(joint_probit_biv,newdata = pred_df,type="link")[,1]
pred_df$Nasal_binary  <- predict(shedding_model,newdata = pred_df,type="response")
pred_df$Nasal_binary_se  <- predict(shedding_model,newdata = pred_df,type="response",se=TRUE)$se.fit
pred_df$Nasal_binary_rescale  <- predict(shedding_model_rescale,newdata = pred_df,type="response")
pred_df$Nasal_binary_rescale_se  <- predict(shedding_model_rescale,newdata = pred_df,type="response",se=TRUE)$se.fit
p <- ggplot(nbacc_dose_response_data,aes(Dose ,Nasal_binary,color=variant)) +
geom_point() + theme_bw() +
scale_x_log10(breaks=c(0.01,0.1,1,10,1e2,1e3,1e4),limits=c(.01,10^4),
labels=trans_format('log10',math_format(10^.x))) +
xlab(expression(paste("Deposited dose, TCID50 (log"[10]," scale)" ))) + ylab("Probability of Shedding") +
scale_color_manual(values=c("black","darkred"),labels = c("Gamma", "WA-1"))+
guides(color=guide_legend(title="Variant"))
p <- p + geom_line(data=pred_df) +
geom_ribbon(data=pred_df, alpha = 0.2,color=NA,
aes(Dose,
ymin=pmax(0,Nasal_binary - Nasal_binary_se),
ymax=pmin(1,Nasal_binary + Nasal_binary_se),
group=variant
)
)
q <- ggplot(nbacc_dose_response_data,aes(PRNT50_binary_pred ,Nasal_binary,color=variant)) +
geom_point() + theme_bw() +
xlab(expression(paste("Dose rescaled by seroconversion probits" ))) + ylab("Probability of Shedding") +
scale_color_manual(values=c("black","darkred"),labels = c("Gamma", "WA-1")) +
guides(color=guide_legend(title="Variant"))
q <- q + geom_line(data=pred_df) +
geom_ribbon(data=pred_df, alpha = 0.2,color=NA,
aes(PRNT50_binary_pred,
ymin=pmax(0,Nasal_binary_rescale - Nasal_binary_rescale_se),
ymax=pmin(1,Nasal_binary_rescale + Nasal_binary_rescale_se),
group=variant
)
)
prow <- plot_grid(
p + theme(legend.position = "none"),
q + theme(legend.position = "none"),
align='vh',labels=c('',''),hjust=-1,nrow=1
)
legend <- get_legend(p + theme(legend.box.margin = margin(0, 0, 0, 0)))
plot_grid(prow,legend,rel_widths = c(3,0.35))
library(cowplot)
plot_grid(prow,legend,rel_widths = c(3,0.35))
prow <- plot_grid(
p + theme(legend.position = "none"),
q + theme(legend.position = "none"),
align='vh',labels=c('',''),hjust=-1,nrow=1
)
legend <- get_legend(p + theme(legend.box.margin = margin(0, 0, 0, 0)))
shedding_model
coef(shedding_model)
-(coef(shedding_model)[1] + coef(shedding_model)[2])/(coef(shedding_model)[3])
-(coef(shedding_model)[1])/coef(shedding_model)[3]
10^(-(coef(shedding_model)[1])/coef(shedding_model)[3])
10^(-(coef(shedding_model)[1] + coef(shedding_model)[2])/coef(shedding_model)[3])
log10(5/1)
log10(88/19.3)
summary(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,data=kmean_metrics))
setwd("~/Documents/Projects/RDClust")
library(tidyverse)
library(ggplot2)
kmean_metrics <- read.csv("data/processed/kmeans_model_metrics.csv")
summary(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,data=kmean_metrics))
scale(kmean_metrics)
kmean_metrics
kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])[0]
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])[,0]
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])
summary(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,data=scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])))
?scale
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])$data
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])[0]
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])[1]
scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")])[,0]
data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))
summary(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))))
src <- coef(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))))
s_rc <- coef(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))))
s_rc
s_rc[1:10]
s_rc[1:11]
s_rc[1:12]
s_rc[1:11]
s_rc[0:11]
s_rc[2:11]
s_rc <- coef(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))))[2:11]
ggplot(s_rc) + geom_bar()
s_rc
names(s_rc)
data.frame(s_rc)
data.frame
?data.frame
data.frame(src=s_rc,par=names(s_rc))
data.frame(src=s_rc,par=names(s_rc))
as.numeric(s_rc)
ggplot(data.frame(par=names(s_rc),src=as.numeric(s_rc)),aes(par,src,fill=src)) + geom_bar()
?geom_bar
ggplot(data.frame(par=names(s_rc),src=as.numeric(s_rc)),aes(par,src,fill=src)) + geom_col()
ggplot(data.frame(par=names(s_rc),src=as.numeric(s_rc)),aes(par,src,fill=src)) +
geom_col() + coord_flip()
?scale_fill_continuous
ggplot(data.frame(par=names(s_rc),src=as.numeric(s_rc)),aes(par,src,fill=src)) +
geom_col() + coord_flip() + scale_fill_gradient2()
data.frame(par=names(s_rc),src=as.numeric(s_rc))
data.frame(par=names(s_rc),src=as.numeric(s_rc)) %>% arrange(src)
data.frame(par=names(s_rc),src=as.numeric(s_rc)) %>% arrange(src) %>% mutate(sign=ifelse(src>0,1,0))
src_data <- data.frame(par=names(s_rc),src=as.numeric(s_rc)) %>% arrange(src) %>% mutate(sign=ifelse(src>0,1,0))
ggplot(src_data,aes(par,src,fill=sign)) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
src_data
factor(src_data$par,levels=src_data$par[order(src_data$src)])
src_data$par <- factor(src_data$par,levels=src_data$par[order(src_data$src)])
ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
p + xlab("Standarized regression coefficient")
p <- ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
p + xlab("Standarized regression coefficient")
p + ylab("Standarized regression coefficient") + xlab("")
p + ylab("Standarized regression coefficient") + xlab("") + guides(fill=FALSE)
p + theme_classic()
p <- ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
p <- p + ylab("Standarized regression coefficient") + xlab("")
p + theme_classic() + guides(fill=FALSE)
p + theme_classic() + guides(fill="none")
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes(log2(D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("log2(d)") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("log2(d)") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,75,125,175)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,D_EMBED,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,75,125,175)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,75,125,175)),
aes((D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
p <- ggplot(filter(kmean_metrics,D_EMBED>=16,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16)),
aes(log2(D_EMBED),(davies_bouldin),color=as.factor(L_WALKS))) + geom_line() + geom_point()
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,75,125,175)),
aes(log2(D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(log2(D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(log2(D_EMBED),(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + theme_bw() + xlab("log2(Embedding Dimension)") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
kmean_metrics
2^3
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2')
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
labels=trans_format('log10',math_format(10^.x)))?scale_x_continuous
?scale_x_continuous
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',labels=trans_format('log2',math_format(2^.x)))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS)
?guides
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p  + facet_grid(K_DIM ~ N_WALKS) + guides(color=guide_legend(title='Walk Length'))
formatted_data <- data.frame(scale(kmean_metrics[,c("scattering_criteria","D_EMBED","L_WALKS","K_DIM","N_WALKS")]))
formatted_data
formatted_data <- setNames(formatted_data,c("Scattering Score","Embedding Dimension","Walk Length","Context Window","Walks per Disease"))
s_rc <- coef(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=)formatted_data)[2:11]
s_rc <- coef(lm(scattering_criteria ~ D_EMBED*L_WALKS*K_DIM*N_WALKS,
data=formatted_data))[2:11]
formatted_data
s_rc <- coef(lm(`Scattering Score` ~ `Embedding Dimension`*`Walk Length`*`Context Window`*`Walks per Disease`,
data=formatted_data))[2:11]
src_data <- data.frame(par=names(s_rc),src=as.numeric(s_rc)) %>% arrange(src) %>% mutate(sign=ifelse(src>0,1,0))
src_data$par <- factor(src_data$par,levels=src_data$par[order(src_data$src)])
p <- ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
p <- p + ylab("Standarized regression coefficient") + xlab("")
p <- p + theme_classic() + guides(fill="none")
p
formatted_data
s_rc <- coef(lm("Scattering Score ~ Embedding Dimension * Walk Length * Context Window * Walks per Disease",
data=formatted_data))[2:11]
as.formula("Scattering Score ~ Embedding Dimension * Walk Length * Context Window * Walks per Disease")
s_rc <- coef(lm(`Scattering Score` ~ `Embedding Dimension`*`Walk Length`*`Context Window`*`Walks per Disease`,
data=formatted_data))[2:11]
s_rc
names(s_rc)
gsub(names(s_rc),'`',''
)
?gsub
?gsub
gsub('`','',names(s_rc))
gsub(':',' X ',gsub('`','',names(s_rc)))
gsub(':',' * ',gsub('`','',names(s_rc)))
names(s_rc) <- gsub(':',' * ',gsub('`','',names(s_rc)))
src_data <- data.frame(par=names(s_rc),src=as.numeric(s_rc)) %>% arrange(src) %>% mutate(sign=ifelse(src>0,1,0))
src_data$par <- factor(src_data$par,levels=src_data$par[order(src_data$src)])
p <- ggplot(src_data,aes(par,src,fill=as.factor(sign))) +
geom_col() + coord_flip() + scale_fill_manual(values=c("red","blue"))
p <- p + ylab("Standarized regression coefficient") + xlab("")
p <- p + theme_classic() + guides(fill="none")
p
ggsave("fig/standardized_regression_coef.png",p,dpi=150)
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=6,height=6)
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=8,height=6)
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=8,height=4)
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=8,height=4,units = "in")
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=4,height=4,units = "in")
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=4,height=2,units = "in")
ggsave("fig/standardized_regression_coef.png",p,dpi=150,width=6,height=4,units = "in")
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p <- p  + facet_grid(K_DIM ~ N_WALKS,label="both") + guides(color=guide_legend(title='Walk Length'))
?facet_grid
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p <- p  + facet_grid(K_DIM ~ N_WALKS,labeller = "label_value") + guides(color=guide_legend(title='Walk Length'))
ggsave("fig/scattering_score.png",p,dpi=300,width=6,height=6,units = "in")
ggsave("fig/scattering_score.png",p,dpi=300,width=8,height=6,units = "in")
ggsave("fig/scattering_score.png",p,dpi=300,width=10,height=6,units = "in")
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p <- p  + facet_grid(K_DIM ~ N_WALKS,margins = TRUE) + guides(color=guide_legend(title='Walk Length'))
ggsave("fig/scattering_score.png",p,dpi=300,width=10,height=6,units = "in")
#Indices over dimension
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p <- p  + facet_grid(K_DIM ~ N_WALKS,labeller = label_value()) + guides(color=guide_legend(title='Walk Length'))
ggsave("fig/scattering_score.png",p,dpi=300,width=10,height=6,units = "in")
p <- ggplot(filter(kmean_metrics,N_WALKS %in% c(20,40,60,80),K_DIM %in% c(8,12,16),L_WALKS %in% c(25,50,100,150,200)),
aes(D_EMBED,(scattering_criteria),color=as.factor(L_WALKS))) + geom_line() + geom_point()
p <- p + scale_x_continuous(trans='log2',breaks=c(8,16,32,64,128,256,512),labels=c(8,16,32,64,128,256,512))
p <- p + theme_bw() + xlab("Embedding Dimension") + ylab("Scattering Score")
p <- p  + facet_grid(K_DIM ~ N_WALKS,labeller = label_both) + guides(color=guide_legend(title='Walk Length'))
ggsave("fig/scattering_score.png",p,dpi=300,width=10,height=6,units = "in")
?label_both
