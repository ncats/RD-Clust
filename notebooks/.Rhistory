simName = simName,
verbose = FALSE,
consoleInterval = 1
)
ssa.plot(out, show.title = TRUE, show.legend = FALSE)
parms <- c(b = 0.5, d = 0.16, K = 200000)      # Parameters
tf <- 16                                # Final time
simName <- "Logistic growth"
x0 <- c(N = 2000)
nu <- matrix(c(+1, -1),ncol = 2)
a  <- c("b*N", "(d+(b-d)*N/K)*N")
set.seed(1)
out <- ssa(
x0 = x0,
a = a,
nu = nu,
parms = parms,
tf = tf,
method = ssa.otl(),
simName = simName,
verbose = FALSE,
consoleInterval = 1
)
ssa.plot(out, show.title = TRUE, show.legend = FALSE)
parms <- c(b = 0.7, d = 0.2, K = 200000)      # Parameters
tf <- 16                                # Final time
simName <- "Logistic growth"
x0 <- c(N = 2000)
nu <- matrix(c(+1, -1),ncol = 2)
a  <- c("b*N", "(d+(b-d)*N/K)*N")
set.seed(1)
out <- ssa(
x0 = x0,
a = a,
nu = nu,
parms = parms,
tf = tf,
method = ssa.otl(),
simName = simName,
verbose = FALSE,
consoleInterval = 1
)
ssa.plot(out, show.title = TRUE, show.legend = FALSE)
parms <- c(b = 0.7, d = 0.2, K = 200000)      # Parameters
tf <- 16                                # Final time
simName <- "Logistic growth"
x0 <- c(N = 2000)
nu <- matrix(c(+1, -1),ncol = 2)
a  <- c("b*N", "(d+(b-d)*N/K)*N")
set.seed(1)
out <- ssa(
x0 = x0,
a = a,
nu = nu,
parms = parms,
tf = tf,
method = ssa.otl(),
simName = simName,
verbose = FALSE,
consoleInterval = 1
)
ssa.plot(out, show.title = TRUE, show.legend = FALSE)
parms <- c(b = 0.7, d = 0.2, K = 200000)      # Parameters
tf <- 16                                # Final time
simName <- "Logistic growth"
x0 <- c(N = 10000)
nu <- matrix(c(+1, -1),ncol = 2)
a  <- c("b*N", "(d+(b-d)*N/K)*N")
set.seed(1)
out <- ssa(
x0 = x0,
a = a,
nu = nu,
parms = parms,
tf = tf,
method = ssa.otl(),
simName = simName,
verbose = FALSE,
consoleInterval = 1
)
ssa.plot(out, show.title = TRUE, show.legend = FALSE)
15*9
60*3
15*11
15*12
15*10
5*4*3
5*4*3*5
5417*0.35
5417*0.35 + 99*25
4500+12250+1000+1650
4500+12250+10000+1650
103*53
?glmer
??glmerControl
install.packages('lme4')
utils::combn(c(1,2,3))
utils::combn(c(1,2,3),2)
t(utils::combn(c(1,2,3),2))
t(utils::combn(c(1,5,10,20),2))
28*.25
system('say What does the fox say?')
system("say What does the fox say? Gering-ding-ding-atee-hatee-hatee-ho")
system("say Chacha-chacha-chacha-chow")
system("say -v Kathy ha-hee ha-hee")
library(beepr)
beep()
beep(sound=4)
install.packages(beepr)
install.packages("beepr")
library(beepr)
beep()
beep(sound=4)
system("say What does the fox say?")
system("What does the fox say?")
system("say -v Kathy What does the fox say?")
200000/329000000
(200000/329000000)*1000
(200000/329000000)*10000
1800
1800 + 2500 + 500 + 900
1 - 3441.7/2482
624/5196
175/1280
0.99 + 0.29
1.28/2
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("STRINGdb")
library(STRINGdb)
library(tidyverse)
setwd("~/Documents/Projects/RDClust/notebooks")
gene_enrichment_resuts <- read_csv("../data/processed/gard_gene_enrichment_results.csv")
gene_enrichment_resuts
unique_genes_cluster <- gene_enrichment_resuts %>%
filter(perm_q<=0.01) %>%
select(Gene_Symbol,HGNC,Gene_ID,Cluster,perm_p,perm_q) %>%
unique()
unique_genes_cluster
single_cluster_genes <- unique_genes_cluster %>% filter(Cluster==28)
string_db <- STRINGdb$new( version="11.5", species=9606,score_threshold=200, network_type="full")
genes_mapped <- string_db$map( single_cluster_genes, "Gene_Symbol", removeUnmappedRows = TRUE )
genes_mapped
single_cluster_genes
single_cluster_genes$Gene_Symbol
string_db$plot_network( single_cluster_genes$Gene_Symbol )
enrichment <- string_db$get_enrichment( single_cluster_genes$Gene_Symbol )
enrichment
View(enrichment)
string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
unique(unique_genes_cluster$Cluster)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi
ppi[['Cluster']] <-28
ppi
observed_ppi_enrichment <- do.call("rbind",
lapply(unique(unique_genes_cluster$Cluster),function(i){
single_cluster_genes <- unique_genes_cluster %>% filter(Cluster==i)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi[['Cluster']] <-i
return(ppi)
})
)
observed_ppi_enrichment
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==0] = 5e-17
observed_ppi_enrichment
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==0]
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==0,]# = 5e-17
observed_ppi_enrichment[,observed_ppi_enrichment$enrichment==0]# = 5e-17
data.frame(observed_ppi_enrichment)
observed_ppi_enrichment <- data.frame(do.call("rbind",
lapply(unique(unique_genes_cluster$Cluster),function(i){
single_cluster_genes <- unique_genes_cluster %>% filter(Cluster==i)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi[['Cluster']] <-i
return(ppi)
})
))
observed_ppi_enrichment[,observed_ppi_enrichment$enrichment==0]# = 5e-17
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==0]# = 5e-17
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==0,]# = 5e-17
observed_ppi_enrichment$enrichment[observed_ppi_enrichment$enrichment==0]# = 5e-17
observed_ppi_enrichment$enrichment[observed_ppi_enrichment$enrichment==0] = 5e-17
observed_ppi_enrichment
for (i in c(1:10)){
print(i)
}
for (i in c(1:10)){
print(i)
}
perm_unique_genes_cluster
unique_genes_cluster
sample(unique_genes_cluster$Cluster)
sample(unique_genes_cluster$Cluster)
sample(unique_genes_cluster$Cluster)
?sample
sample(unique_genes_cluster$Cluster)
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
table(sample(unique_genes_cluster$Cluster))
perm_unique_genes_cluster <- unique_genes_cluster
for (p in c(1:10)){
perm_unique_genes_cluster$Cluster <- sample(perm_unique_genes_cluster$Cluster)
perm_ppi_enrichment <- data.frame(do.call("rbind",
lapply(unique(perm_unique_genes_cluster$Cluster),function(i){
single_cluster_genes <- perm_unique_genes_cluster %>% filter(Cluster==i)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi[['Cluster']] <-i
return(ppi)
})
))
all_perm_ppi <- rbind(all_perm_ppi,perm_ppi_enrichment)
}
perm_unique_genes_cluster <- unique_genes_cluster
all_perm_ppi <- data.frame()
for (p in c(1:10)){
perm_unique_genes_cluster$Cluster <- sample(perm_unique_genes_cluster$Cluster)
perm_ppi_enrichment <- data.frame(do.call("rbind",
lapply(unique(perm_unique_genes_cluster$Cluster),function(i){
single_cluster_genes <- perm_unique_genes_cluster %>% filter(Cluster==i)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi[['Cluster']] <-i
return(ppi)
})
))
all_perm_ppi <- rbind(all_perm_ppi,perm_ppi_enrichment)
}
all_perm_ppi$enrichment[all_perm_ppi$enrichment==0] = 5e-17
all_perm_ppi
nrow(observed_ppi_enrichment)
nrow(all_perm_ppi)
231/33
log10(all_perm_ppi$enrichment)
log10(all_perm_ppi$enrichment)
all_perm_ppi$enrichment
as.numeric(all_perm_ppi$enrichment)
log10(as.numeric(all_perm_ppi$enrichment))
-log10(as.numeric(all_perm_ppi$enrichment))
data.frame(logp = -log10(as.numeric(all_perm_ppi$enrichment),type='permuted')
-log10(as.numeric(all_perm_ppi$enrichment)))
enrich_logp <- rbind(
data.frame(logp = -log10(as.numeric(observed_ppi_enrichment$enrichment)),type='observed'),
data.frame(logp = -log10(as.numeric(all_perm_ppi$enrichment)),type='permuted')
)
p <- ggplot(enrich_logp,aes(logp,fill='type')) + geom_hist() + theme_classic()
p <- ggplot(enrich_logp,aes(logp,fill='type')) + geom_histogram() + theme_classic()
p
enrich_logp
p <- ggplot(enrich_logp,aes(logp,fill=type)) + geom_histogram() + theme_classic()
p
p <- ggplot(enrich_logp,aes(logp,fill=type)) + geom_histogram(position="dodge2") + theme_classic()
p
p <- ggplot(enrich_logp,aes(logp,fill=type)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
all_perm_ppi
for (p in c(1:10)){
perm_unique_genes_cluster$Cluster <- sample(perm_unique_genes_cluster$Cluster)
perm_ppi_enrichment <- data.frame(do.call("rbind",
lapply(unique(perm_unique_genes_cluster$Cluster),function(i){
single_cluster_genes <- perm_unique_genes_cluster %>% filter(Cluster==i)
ppi <- string_db$get_ppi_enrichment( single_cluster_genes$Gene_Symbol )
ppi[['Cluster']] <-i
return(ppi)
})
))
all_perm_ppi <- rbind(all_perm_ppi,perm_ppi_enrichment)
}
all_perm_ppi$enrichment[all_perm_ppi$enrichment==0] = 5e-17
enrich_logp <- rbind(
data.frame(logp = -log10(as.numeric(observed_ppi_enrichment$enrichment)),type='observed'),
data.frame(logp = -log10(as.numeric(all_perm_ppi$enrichment)),type='permuted')
)
p <- ggplot(enrich_logp,aes(logp,fill=type)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
nrow(all_perm_ppi)/33
all_perm_ppi
all_perm_ppi$Cluster==28
all_perm_ppi[all_perm_ppi$Cluster==28,]
observed_ppi_enrichment[observed_ppi_enrichment$Cluster==28,]
p <- ggplot(enrich_logp,aes(logp,fill=Cluster)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
enrich_logp <- rbind(
data.frame(logp = -log10(as.numeric(observed_ppi_enrichment$enrichment)),Cluster=observed_ppi_enrichment$Cluster,type='observed'),
data.frame(logp = -log10(as.numeric(all_perm_ppi$enrichment)),Cluster=all_perm_ppi$Cluster,type='permuted')
)
observed_ppi_enrichment$Cluster
as.numeric(observed_ppi_enrichment$Cluster)
enrich_logp <- rbind(
data.frame(logp = -log10(as.numeric(observed_ppi_enrichment$enrichment)),Cluster=as.numeric(observed_ppi_enrichment$Cluster),type='observed'),
data.frame(logp = -log10(as.numeric(all_perm_ppi$enrichment)),Cluster=as.numeric(all_perm_ppi$Cluster),type='permuted')
)
p <- ggplot(enrich_logp,aes(logp,fill=Cluster)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
enrich_logp
p <- ggplot(enrich_logp,aes(logp,fill=Cluster)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
p <- ggplot(enrich_logp,aes(logp,fill=as.factor(Cluster))) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
enrich_logp
enrich_logp %>% group_by(Cluster) %>% mutate(within_clust_percentile = scale(logp,center=min(logp,na.rm=TRUE),scale=diff(range(logp,na.rm=TRUE))))
scale_perc<- function(x){
return(scale(x,center=min(x,na.rm=TRUE),scale=diff(range(x,na.rm=TRUE))))
}
enrich_logp %>% group_by(Cluster) %>% mutate(within_clust_percentile =scale_perc(logp))
enrich_logp <- enrich_logp %>% group_by(Cluster) %>% mutate(within_clust_percentile =scale_perc(logp))
View(enrich_logp)
scale_perc<- function(x){
return(1 - scale(x,center=min(x,na.rm=TRUE),scale=diff(range(x,na.rm=TRUE))))
}
enrich_logp <- enrich_logp %>% group_by(Cluster) %>% mutate(within_clust_percentile =scale_perc(logp))
View(enrich_logp)
1/33
enrich_logp %>% filter(within_clust_percentile==0)
enrich_logp %>% filter(type=='observed',within_clust_percentile==0)
enrich_logp %>% filter(type=='observed',logp==16.3)
enrich_logp %>% filter(type=='observed',logp==16.3)
enrich_logp$logp
enrich_logp %>% filter(type=='observed',logp==-log10(5e-17))
p <- ggplot(enrich_logp,aes(logp,fill=as.factor(type))) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
p <- ggplot(enrich_logp,aes(logp,fill=type)) + geom_histogram(aes(y = ..density..),position="dodge2") + theme_classic()
p
###
observed_ppi_enrichment$enrichment[observed_ppi_enrichment$enrichment==5e-17,]
###
observed_ppi_enrichment[observed_ppi_enrichment$enrichment==5e-17,]
###
sig_ppi_cluster <- observed_ppi_enrichment$Cluster[observed_ppi_enrichment$enrichment==5e-17]
unique_genes_cluster
###
sig_ppi_cluster <- observed_ppi_enrichment$Cluster[observed_ppi_enrichment$enrichment==5e-17]
observed_go_enrichment <- data.frame(do.call("rbind",
lapply(sig_ppi_cluster,function(i){
single_cluster_genes <- unique_genes_cluster %>% filter(Cluster==i)
go_enr <- string_db$get_enrichment( single_cluster_genes$Gene_Symbol )
go_enr['Cluster'] <- i
return(go_enr)
})
))
observed_go_enrichment
nrow(observed_go_enrichment)
write_csv(observed_go_enrichment,"../data/processed/stringdb_enriched_terms.csv")
gene_enrichment_resuts
head(gene_enrichment_resuts)
gene_enrichment_fdr <- gene_enrichment_resuts %>%
filter(perm_q<=0.01)
gene_enrichment_fdr
###
interesting_cluster <- c(3,17,18,20,21,22,23,25,28,35)
###
interesting_clusters <- c(3,17,18,20,21,22,23,25,28,35)
gene_enrichment_fdr %>% filter(Cluster %in% interesting_clusters)
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = count(unique(GARD_ID)))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = length(unique(GARD_ID)))
gene_enrichment_resuts %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = length(unique(GARD_ID)))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = length(unique(GARD_ID)))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = paste(unique(GARD_ID)))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = paste(unique(GARD_ID),sep=', '))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = str_c(unique(GARD_ID),sep=', '))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = str_c(unique(GARD_ID),collapse=', '))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>% summarize(N_disease = str_c(unique(GARD_Disease),collapse=', '))
gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse=', '),
Genes = str_c(unique(Gene_Symbol),collapse=', '))
observed_go_enrichment
observed_go_enrichment %>% filter(Cluster %in% interesting_clusters)
head(observed_go_enrichment)
observed_go_enrichment %>% filter(Cluster %in% interesting_clusters) %>% select(term, description, Cluster)
interesting_go_terms <- observed_go_enrichment %>% filter(Cluster %in% interesting_clusters) %>% select(term, description, Cluster)
interesting_cluster_go_terms <- observed_go_enrichment %>% filter(Cluster %in% interesting_clusters) %>% select(term, description, Cluster)
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(GO_terms = str_c(unique(description),collapse=', '))
interesting_cluster_go_terms
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse=', '),
Genes = str_c(unique(Gene_Symbol),collapse=', '))
merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
head(disease_gene_go)
View(disease_gene_go)
interesting_cluster_go_terms
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(GO_terms = str_c(unique(description),collapse='; '))
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse='; '),
Genes = str_c(unique(Gene_Symbol),collapse='; '))
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_csv(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.csv")
interesting_cluster_go_terms
interesting_cluster_gene_disease
View(disease_gene_go)
?write_csv
write_excel_csv(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.csv")
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
summarize(GO_terms = str_c(unique(description),collapse='; '))
interesting_cluster_go_terms
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
summarize(GO_terms = str_c(unique(description),collapse='; '))
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse='; '),
Genes = str_c(unique(Gene_Symbol),collapse='; '))
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
install.packages("ontologyIndex")
library(ontologyIndex)
library(ontologyIndex)
data(go)
interesting_cluster_go_terms
observed_go_enrichment
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
summarize(total_go = length(unique(term)),
minimal_go =length(minimal_set(go,term)) )
interesting_cluster_go_terms
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
filter(term %in% minimal_set(go,term)) %>%
summarize(total_go = length(unique(term)),
minimal_go =length(minimal_set(go,term)) )
interesting_cluster_go_terms
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
filter(term %in% minimal_set(go,term)) %>%
summarize(GO_terms = str_c(unique(description),collapse='; '))
interesting_cluster_go_terms
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
gene_enrichment_fdr
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster,Gene_Symbol) %>%
summarize(GARD_Disease = first(GARD_Disease)) %>%
ungroup() %>% group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse='; '),
Genes = str_c(unique(Gene_Symbol),collapse='; '))
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse='; '),
Genes = str_c(unique(Gene_Symbol),collapse='; '))
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
###
interesting_clusters <- c(3,17,20,28,35)
interesting_cluster_go_terms <- observed_go_enrichment %>%
filter(Cluster %in% interesting_clusters,
category %in% c("Function","Process"),
fdr <=0.0001) %>%
group_by(Cluster) %>%
filter(term %in% minimal_set(go,term)) %>%
summarize(GO_terms = str_c(unique(description),collapse='; '))
interesting_cluster_gene_disease <- gene_enrichment_fdr %>%
filter(Cluster %in% interesting_clusters) %>%
group_by(Cluster) %>%
summarize(Diseases = str_c(unique(GARD_Disease),collapse='; '),
Genes = str_c(unique(Gene_Symbol),collapse='; '))
disease_gene_go <- merge(interesting_cluster_gene_disease,interesting_cluster_go_terms)
write_delim(disease_gene_go,"../data/processed/interesting_cluster_disease_gene_go_table.tsv",delim="\t",quote='all')
